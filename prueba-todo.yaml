---
- name: Validaciones en RHEL 9 sin cambios
  hosts: all
  become: yes
  tasks:

  - name: Crear archivo de log si no existe
    ansible.builtin.file:
      path: /var/log/ansible_validations.log
      state: touch

  # 1. Verificación de que el sistema esté actualizado
  - name: Verificar si el sistema está actualizado
    ansible.builtin.shell: yum check-update
    register: update_check
    ignore_errors: yes
  - name: Registrar log si el sistema no está actualizado
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "El sistema no está actualizado en {{ inventory_hostname }}."
      shell: echo 'Punto 1 Invalido el sistema tiene actualizaciones pendientes'
    when: update_check.rc != 0

  # 2. Verificar si samba y samba-client están instalados (solo validación)
  - name: Verificar instalación de samba y samba-client
    ansible.builtin.command:
      cmd: "rpm -q samba samba-client"
    register: samba_check
    ignore_errors: yes
  - name: Registrar log si samba o samba-client no están instalados
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "Samba o samba-client no están instalados en {{ inventory_hostname }}."
    when: samba_check.rc != 0

  # 3. Verificar si SELinux está activo
  - name: Verificar si SELinux está activo
    ansible.builtin.shell: getenforce
    register: selinux_status
  - name: Registrar log si SELinux no está activo
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "SELinux no está activo en {{ inventory_hostname }}."
    when: selinux_status.stdout != "Enforcing"

  # 4. Verificar si CUPS está deshabilitado (solo validación)
  - name: Verificar si CUPS está deshabilitado
    ansible.builtin.systemd:
      name: cups
      enabled: no
      state: stopped
      masked: yes
    check_mode: yes
    register: cups_status
  - name: Registrar log si CUPS está activo o habilitado
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "CUPS está activo o habilitado en {{ inventory_hostname }}."
    when: cups_status.changed

  # 5. Verificar usuarios y contraseñas (solo validación)
  - name: Verificar si los usuarios existen
    ansible.builtin.shell: id {{ item }}
    loop:
      - compras
      - comercial
      - ventas
      - administrativo
      - soporte
    register: users_check
    ignore_errors: yes
  - name: Registrar log si algún usuario no existe
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "El usuario {{ item }} no existe en {{ inventory_hostname }}."
    when: users_check.results | selectattr('rc', '!=', 0) | list | length > 0

  # 6. Verificar carpeta ~/guias (solo validación)
  - name: Verificar que la carpeta ~/guias exista y pertenezca al grupo hackatonLabs
    ansible.builtin.stat:
      path: /home/{{ ansible_user }}/guias
    register: guias_folder_check
  - name: Registrar log si la carpeta ~/guias no existe o no pertenece al grupo hackatonLabs
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "La carpeta ~/guias no existe o no pertenece al grupo hackatonLabs en {{ inventory_hostname }}."
    when: not guias_folder_check.stat.exists

  # 7. Verificar si existen los archivos vacíos archivo-1.txt a archivo-100.txt (solo validación)
  - name: Verificar si existen 100 archivos en ~/guias
    ansible.builtin.command:
      cmd: "[[ $(ls ~/guias/archivo-{1..100}.txt 2>/dev/null | wc -l) -eq 100 ]]"
    register: archivos_check
    ignore_errors: yes
  - name: Registrar log si no existen los archivos archivo-1.txt a archivo-100.txt
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "No existen 100 archivos archivo-1.txt a archivo-100.txt en {{ inventory_hostname }}."
    when: archivos_check.rc != 0

  # 8. Verificar que la carpeta /guias/config exista (solo validación)
  - name: Verificar que /guias/config exista y contenga los archivos necesarios
    ansible.builtin.stat:
      path: /guias/config
    register: guias_config_check
  - name: Registrar log si la carpeta /guias/config no existe
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "/guias/config no existe en {{ inventory_hostname }}."
    when: not guias_config_check.stat.exists

  - name: Verificar si los archivos están en /guias/config
    ansible.builtin.command:
      cmd: "[[ -f /guias/config/redhat-release && -f /guias/config/passwd && -f /guias/config/linux.words ]]"
    register: copy_check
    ignore_errors: yes
  - name: Registrar log si los archivos no están presentes en /guias/config
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "Los archivos necesarios no están presentes en /guias/config en {{ inventory_hostname }}."
    when: copy_check.rc != 0

  # 9. Validar enlace simbólico en /guias/config/grupos (solo validación)
  - name: Verificar si el enlace simbólico /guias/config/grupos existe y apunta a /etc/group
    ansible.builtin.stat:
      path: /guias/config/grupos
    register: symlink_check
  - name: Verificar si el enlace es válido
    ansible.builtin.command:
      cmd: "[[ $(readlink /guias/config/grupos) == '/etc/group' ]]"
    register: symlink_validity
    ignore_errors: yes
    when: symlink_check.stat.islnk
  - name: Registrar log si el enlace simbólico no existe o está mal creado
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "El enlace simbólico /guias/config/grupos no existe o está mal creado en {{ inventory_hostname }}."
    when: not symlink_check.stat.exists or symlink_validity.rc != 0

  # 10. Verificar la frase en /etc/motd (solo validación)
  - name: Verificar si la frase 'El problema no es problema' está en /etc/motd
    ansible.builtin.shell: grep -Fxq 'El problema no es problema' /etc/motd
    register: motd_check
    ignore_errors: yes
  - name: Registrar log si la frase no está en /etc/motd
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "La frase 'El problema no es problema' no está en /etc/motd en {{ inventory_hostname }}."
    when: motd_check.rc != 0

  # 11. Verificar particiones en el sistema operativo (solo validación)
  - name: Verificar si el archivo /tmp/particiones.txt existe y contiene las particiones correctas
    ansible.builtin.command:
      cmd: "diff <(lsblk -no NAME,SIZE) /tmp/particiones.txt"
    register: partitions_check
    ignore_errors: yes
  - name: Registrar log si las particiones no coinciden o el archivo no existe
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "Las particiones no coinciden o /tmp/particiones.txt no existe en {{ inventory_hostname }}."
    when: partitions_check.rc != 0

  # 12. Verificar que haya 25GB de espacio disponible (solo validación)
  - name: Verificar que haya 25GB de espacio disponible
    ansible.builtin.shell: |
      df -h / | awk '$4 ~ /[2-9][0-9]G|100G/{ print $4 }'
    register: space_check
    ignore_errors: yes
  - name: Registrar log si no hay 25GB de espacio disponible
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "No hay 25GB de espacio disponible en {{ inventory_hostname }}."
    when: space_check.stdout == ""
