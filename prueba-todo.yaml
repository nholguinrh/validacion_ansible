---
- name: Validaciones en RHEL 9
  hosts: all
  become: yes
  tasks:
  
  - name: Crear archivo de log
    ansible.builtin.file:
      path: /var/log/ansible_validations.log
      state: touch
  
  - name: Verificar si el sistema está actualizado
    ansible.builtin.shell: |
      yum check-update
    register: update_check
    ignore_errors: yes
  - name: Registrar log si el sistema no está actualizado
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "El sistema no está actualizado en {{ inventory_hostname }}."
    when: update_check.rc != 0

  - name: Verificar instalación de samba y samba-client
    ansible.builtin.package:
      name:
        - samba
        - samba-client
      state: present
    check_mode: yes
    register: samba_check
  - name: Registrar log si samba o samba-client no están instalados
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "Samba o samba-client no están instalados en {{ inventory_hostname }}."
    when: samba_check.changed

  - name: Verificar si SELinux está activo
    ansible.builtin.shell: |
      getenforce
    register: selinux_status
  - name: Registrar log si SELinux no está activo
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "SELinux no está activo en {{ inventory_hostname }}."
    when: selinux_status.stdout != "Enforcing"

  - name: Verificar si CUPS está deshabilitado
    ansible.builtin.systemd:
      name: cups
      enabled: no
      state: stopped
      masked: yes
    check_mode: yes
    register: cups_status
  - name: Registrar log si CUPS está activo o habilitado
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "CUPS está activo o habilitado en {{ inventory_hostname }}."
    when: cups_status.changed

  - name: Verificar usuarios y contraseñas
    ansible.builtin.user:
      name: "{{ item }}"
      password: "{{ 'DefaultHackatonLabs123*' | password_hash('sha512') }}"
      groups: hackatonLabs
      state: present
    check_mode: yes
    loop:
      - compras
      - comercial
      - ventas
      - administrativo
      - soporte
    register: users_check
  - name: Registrar log si falta algún usuario o no tiene la contraseña correcta
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "El usuario {{ item.item }} no está presente o no tiene la contraseña correcta en {{ inventory_hostname }}."
    when: users_check.results | selectattr('changed') | list | length > 0

  - name: Verificar que la carpeta ~/guias exista y pertenezca al grupo hackatonLabs
    ansible.builtin.file:
      path: /home/{{ ansible_user }}/guias
      owner: "{{ ansible_user }}"
      group: hackatonLabs
      state: directory
      mode: '0775'
    check_mode: yes
    register: guias_folder_check
  - name: Registrar log si la carpeta ~/guias no existe o no pertenece al grupo hackatonLabs
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "La carpeta ~/guias no existe o no pertenece al grupo hackatonLabs en {{ inventory_hostname }}."
    when: guias_folder_check.changed

  - name: Verificar si existen 100 archivos en ~/guias
    ansible.builtin.shell: |
      for i in $(seq 1 100); do
        touch ~/guias/archivo-$i.txt
      done
    check_mode: yes
    register: archivos_check
  - name: Registrar log si no existen los archivos archivo-1.txt a archivo-100.txt
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "No existen 100 archivos archivo-1.txt a archivo-100.txt en {{ inventory_hostname }}."
    when: archivos_check.changed

  - name: Verificar que /guias/config tenga copias de archivos importantes
    ansible.builtin.command:
      cmd: stat /guias/config
    check_mode: yes
    register: guias_config_check
  - name: Registrar log si /guias/config no contiene las copias necesarias
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "/guias/config no tiene los archivos necesarios en {{ inventory_hostname }}."
    when: guias_config_check.failed

  - name: Verificar copias de archivos
    ansible.builtin.copy:
      src: "{{ item }}"
      dest: /guias/config/
      remote_src: yes
    check_mode: yes
    loop:
      - /etc/redhat-release
      - /etc/passwd
      - /usr/share/dict/linux.words
    register: copy_check
  - name: Registrar log si las copias de archivos no están presentes en /guias/config
    ansible.builtin.lineinfile:
      path: /var/log/ansible_validations.log
      line: "Las copias de archivos no están presentes en /guias/config en {{ inventory_hostname }}."
    when: copy_check.changed

